[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mini-chat"
version = "0.1.0"
description = "Terminal-based chatbot using Rich for UI and direct HTTP requests"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
dependencies = [
    "rich~=13.7.0",
    "requests~=2.31.0",
    "pyyaml~=6.0.1",
]

[project.optional-dependencies]
dev = [
    "ruff~=0.3.0",
    "pre-commit~=3.5.0",
    "pytest~=7.4.0",
    "pytest-cov~=4.1.0",
]

[project.scripts]
mini-chat = "mini_chat.__main__:main"
mc = "mini_chat.__main__:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=mini_chat --cov-report=term"

[tool.ruff]
target-version = "py310"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "PTH", # flake8-use-pathlib
    "RUF", # Ruff-specific rules
]

[tool.ruff.lint.isort]
known-first-party = ["mini_chat"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # Unused imports
